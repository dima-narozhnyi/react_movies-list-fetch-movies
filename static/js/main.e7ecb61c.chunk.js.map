{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","BASE_URL","title","a","fetch","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","onSubmit","event","preventDefault","htmlFor","value","id","classNames","onChange","target","type","placeholder","onClick","getMovie","then","newMovie","Response","App","setMovies","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCffC,EAAW,2C,4CAEV,WAAwBC,GAAxB,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,cAAkBC,IADzC,WACCG,EADD,QAGSC,GAHT,sBAIG,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ9C,gCAOEJ,EAASK,QAPX,4C,sBCQA,IAAMC,EAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrC,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOvB,EAAP,KAAcyB,EAAd,KACA,EAA0BF,oBAAkB,GAA5C,mBAAOG,EAAP,KAAcC,EAAd,KAiCA,OACE,qCACE,uBAAM1B,UAAU,aAAa2B,SApBU,SAACC,GAC1CA,EAAMC,iBAEF9B,IACFsB,EAAStB,GACTwB,EAAS,IACTC,EAAS,MACTE,GAAS,KAaT,UACE,sBAAK1B,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,wBAEE,uBACEC,MAAOpB,EACPqB,GAAG,cACHhC,UAAWiC,IAAW,QACpB,CAAE,YAAaR,IACjBS,SAlBS,SAACN,GACpB,IAAQG,EAAUH,EAAMO,OAAhBJ,MAERL,GAAS,GACTH,EAASQ,IAeCK,KAAK,OACLC,YAAY,+BAIfZ,GACC,mBAAGzB,UAAU,iBAAb,mDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,kBACVsC,QA5DM,YDbb,SAAP,mCCcIC,CAAS5B,GACN6B,MAAK,SAAAC,GACsB,UAAtBA,EAASC,UACXlB,EAAS,MACTE,GAAS,KAETF,EAASiB,GACTf,GAAS,QAiDP,4BASF,qBAAK1B,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACED,GAAS,cAAC,EAAD,CAAWA,MAAOA,WCzFxB4C,EAAU,WACrB,MAA4BrB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAeqC,EAAf,KAUA,OACE,sBAAK5C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWqB,SAdA,SAACtB,GACMQ,EAAOsC,MAAK,gBAAGpC,EAAH,EAAGA,OAAH,OAAgBV,EAAMU,SAAWA,MAGjEmC,GAAU,SAAAE,GAAa,4BAAQA,GAAR,CAAuB/C,gBCRpDgD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e7ecb61c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=37176dfa';\n\nexport async function getMovie(title: string) {\n  const response = await fetch(`${BASE_URL}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n}\n","import { FC, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState<boolean>(false);\n\n  const findMovie = () => {\n    getMovie(title)\n      .then(newMovie => {\n        if (newMovie.Response === 'False') {\n          setMovie(null);\n          setError(true);\n        } else {\n          setMovie(newMovie);\n          setError(false);\n        }\n      });\n  };\n\n  const submitForm: React.FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n      setTitle('');\n      setMovie(null);\n      setError(false);\n    }\n  };\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setError(false);\n    setTitle(value);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={submitForm}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <input\n              value={title}\n              id=\"movie-title\"\n              className={classNames('input',\n                { 'is-danger': error })}\n              onChange={inputHandler}\n              type=\"text\"\n              placeholder=\"Enter a title to search\"\n            />\n          </label>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    const isMovieInList = movies.some(({ imdbID }) => movie.imdbID === imdbID);\n\n    if (!isMovieInList) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}